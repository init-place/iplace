syntax = "proto3";
package iplace.board.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "iplace/board/v1/board.proto";

option go_package = "github.com/init-place/iplace/x/board/types";

service Msg {
  option (cosmos.msg.v1.service) = true;

  rpc CreateBoard(MsgCreateBoard) returns (MsgCreateBoardResponse);
  rpc SetPixel(MsgSetPixel) returns (MsgSetPixelResponse);
}

message MsgCreateBoard {
  option (cosmos.msg.v1.signer) = "creator";

  option (amino.name) = "iplace/MsgCreateBoard";

  string name = 2;
  uint32 size_x = 3;
  uint32 size_y = 4;
  string creator = 7 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message MsgCreateBoardResponse {
  Board board = 1;
}

message MsgSetPixel {
  option (cosmos.msg.v1.signer) = "setter";

  option (amino.name) = "iplace/MsgSetPixel";

  uint32 board_id = 1;
//  uint32 slice_id = 2;
  uint32 pixel_index = 3;
  uint32 color = 4;
  string setter = 5 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message MsgSetPixelResponse {}
